lambda
map
filter
global


__getitem__
or
__iter__

python 2.x

raw_input takes everything as a string
not able to interpret the type of the data entered
not able to interpolate the value of given variable

input
able to recognize type and also interpolate value of the given variable


python 3.x

there is no raw_input

input in 3.x is same as raw_input in 2.x
input behaviour of 2.x can be obtained by using eval(input) in 3.x










++++++++++++++++++++++++++++++++++++++++++++



Python 3.5.2 (default, Nov 23 2017, 16:37:01) 
[GCC 5.4.0 20160609] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> x = input("enter something")
enter something10
>>> x
'10'
>>> name = "radha"
>>> x = input("enter something")
enter somethingname
>>> x
'name'
>>> x = eval(input("enter something"))
enter something10
>>> x
10
>>> x = eval(input("enter something"))
enter somethingname
>>> x
'radha'
>>> import random
>>> random.randint(1,100)
7
>>> random.randint(1,100)
86
>>> help(random.randint)

>>> quit()


++++++++=======++++++++++++++++++++++++++++++++++++

pyton
No command 'pyton' found, did you mean:
 Command 'pytone' from package 'pytone' (universe)
 Command 'python' from package 'python3' (main)
 Command 'python' from package 'python-minimal' (main)
pyton: command not found
sessitra@VTA010L:~$ python
Python 2.7.12 (default, Dec  4 2017, 14:50:18) 
[GCC 5.4.0 20160609] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> def is_even(x):
...     return x%2==0
... 
>>> is_even(100)
True
>>> is_even(55))
  File "<stdin>", line 1
    is_even(55))
               ^
SyntaxError: invalid syntax
>>> is_even(55)
False
>>> y = lambda x:x%2==0
>>> y(100)
True
>>> y(23)
False
>>> y = lambda x:x+2
>>> y(10)
12
>>> def add_2(x):
...     return x+2
... 
>>> add_2(100)
102
>>> students = [("madhavi", "python", 99), ("sravya", "django", 56), ("shiva", "flask", 82), ("aditya", "pyramid", 92)]
>>> sorted(students, key=lambda x:x[2])
[('sravya', 'django', 56), ('shiva', 'flask', 82), ('aditya', 'pyramid', 92), ('madhavi', 'python', 99)]
>>> sorted(students, key=lambda x:x[2], reverse=True)
[('madhavi', 'python', 99), ('aditya', 'pyramid', 92), ('shiva', 'flask', 82), ('sravya', 'django', 56)]
>>> sorted(students, key=lambda x:x[0], reverse=True)
[('sravya', 'django', 56), ('shiva', 'flask', 82), ('madhavi', 'python', 99), ('aditya', 'pyramid', 92)]
>>> sorted(students, key=lambda x:x[1], reverse=True)
[('madhavi', 'python', 99), ('aditya', 'pyramid', 92), ('shiva', 'flask', 82), ('sravya', 'django', 56)]
>>> name = "radha"
>>> dir(name)
['__add__', '__class__', '__contains__', '__delattr__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__getslice__', '__gt__', '__hash__', '__init__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '_formatter_field_name_split', '_formatter_parser', 'capitalize', 'center', 'count', 'decode', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'index', 'isalnum', 'isalpha', 'isdigit', 'islower', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
>>> l = [90, 12, 34]
>>> dir(l)
['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__delslice__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getslice__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__setslice__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
>>> x_2 = map(add_2, [90, 34, 23])
>>> x_2
[92, 36, 25]
>>> x_2 = filter(is_even, [90, 34, 23])
>>> x_2
[90, 34]
>>> x_2 = map(lambda x:x+2, [90, 34, 23])
>>> x_2
[92, 36, 25]
>>> x_2 = filter(lambda x:x%2==0, [90, 34, 23])
>>> x_2
[90, 34]
>>> x_2 = filter(lambda x:x%2==0, [90, 34, 26])
>>> x_2
[90, 34, 26]
>>> range(1,11)
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> x_2 = map(lambda x:True, range(1,11))
>>> x_2
[True, True, True, True, True, True, True, True, True, True]
>>> x_2 = filter(lambda x:True, range(1,11))
>>> x_2
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> x_2 = filter(lambda x:x%2==0, range(1,101))
>>> x_2
[2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100]
>>> 4%2==0
True
>>> 5%2==0
False
>>> quit()
sessitra@VTA010L:~$ vi global_demo.py
sessitra@VTA010L:~$ cat global_demo.py 
x = 10

def modify():
	print "Inside function:", x

modify()
print "outside function:", x
sessitra@VTA010L:~$ python global_demo.py 
Inside function: 10
outside function: 10
sessitra@VTA010L:~$ vi global_demo.py
sessitra@VTA010L:~$ cat global_demo.py 
x = 10

def modify():
	x = 100
	print "Inside function:", x

modify()
print "outside function:", x
sessitra@VTA010L:~$ python global_demo.py 
Inside function: 100
outside function: 10
sessitra@VTA010L:~$ vi global_demo.py
sessitra@VTA010L:~$ cat global_demo.py 
x = 10

def modify():
	x = x+1
	print "Inside function:", x

modify()
print "outside function:", x
sessitra@VTA010L:~$ python global_demo.py 
Traceback (most recent call last):
  File "global_demo.py", line 7, in <module>
    modify()
  File "global_demo.py", line 4, in modify
    x = x+1
UnboundLocalError: local variable 'x' referenced before assignment
sessitra@VTA010L:~$ vi global_demo.py
sessitra@VTA010L:~$ python global_demo.py 
Inside function: 11
outside function: 11
sessitra@VTA010L:~$ vi guess_demo.py
sessitra@VTA010L:~$ python
Python 2.7.12 (default, Dec  4 2017, 14:50:18) 
[GCC 5.4.0 20160609] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> x = raw_input("enter something")
enter something10
>>> x
'10'
>>> type(x)
<type 'str'>
>>> name="radha"
>>> x = raw_input("enter something")
enter somethingname
>>> x
'name'
>>> x = input("enter something")
enter something10
>>> x
10
>>> type(x)
<type 'int'>
>>> x = input("enter something")
enter somethingname
>>> x
'radha'
>>> quit()
sessitra@VTA010L:~$ vi guessing_game.py
sessitra@VTA010L:~$ python guessing_game.py 
Enter any number from 1 to 10056
Go lower!
Enter any number from 1 to 10036
Go higher!
Enter any number from 1 to 10046
Go lower!
Enter any number from 1 to 10040
You won!
sessitra@VTA010L:~$ vi guessing_game.py
sessitra@VTA010L:~$ python guessing_game.py 
Enter any number from 1 to 10056
Go higher!
Enter any number from 1 to 10076
Go lower!
Enter any number from 1 to 10066
Go lower!
Enter any number from 1 to 10060
Go higher!
Enter any number from 1 to 10063
You won! and the number of guesses you made: 5
sessitra@VTA010L:~$ 

